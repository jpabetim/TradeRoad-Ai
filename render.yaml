services:
  - type: web
    name: traderoad-ai
    env: node
    buildCommand: |
      # Instalar dependencias del frontend incluyendo dependencias de desarrollo
      npm install --include=dev
      
      # Explícitamente instalar las dependencias de desarrollo críticas
      npm install --no-save @vitejs/plugin-react @originjs/vite-plugin-commonjs vite-plugin-node-polyfills
      
      # Copiar CCXT browser a carpeta pública para asegurar compatibilidad con navegador
      echo "Copiando CCXT browser a carpeta pública..."
      mkdir -p ./public/lib
      cp ./node_modules/ccxt/dist/ccxt.browser.min.js ./public/lib/
      
      # Verificar si existe el script de configuración
      if [ -f "./scripts/generate-config.cjs" ]; then
        echo "Ejecutando generate-config.cjs"
        node ./scripts/generate-config.cjs
      elif [ -f "./scripts/generate-config.js" ]; then
        echo "Ejecutando generate-config.js"
        node ./scripts/generate-config.js
      else
        echo "No se encontró script de configuración"
      fi
      
      # Mostrar las líneas relevantes de index.html DESPUÉS de la inyección de la API key
      echo "Mostrando sección de script de API Key en index.html DESPUÉS de la inyección:"
      grep -C 15 'const injectedApiKey' index.html || echo "No se encontró la clave 'injectedApiKey'"
      echo "-----------------------------------------------------------------"
      
      # Mostrar todas las dependencias instaladas para diagnóstico
      echo "Listando todas las dependencias instaladas:"
      npm list --depth=0
      
      # Construir la aplicación frontend
      npm run build
      
      # Listar archivos en dist para asegurarse de que todo está correcto
      echo "Contenido del directorio dist:"
      ls -la ./dist
      
      # Instalar dependencias del servidor
      cd server && npm install
    startCommand: node start.cjs
    pullRequestPreviewsEnabled: true
    headers:
      - path: /*
        name: Cache-Control
        value: no-cache
    envVars:
      - key: NODE_VERSION
        value: 18.15.0
      - key: API_KEY
        sync: true # Compatibilidad con el método anterior
      - key: VITE_API_KEY
        sync: true # Alternativa para Vite
      - key: GEMINI_API_KEY
        sync: true # Esta es la variable que usará el servidor backend
